##
# Server block contents for a Magento1 server.
#
# Note that this content is assumed to be routed to via an upstream that a
# *:443 listening server block sent via proxy_pass.
#
# The actual server block defintion needs to include `listen`, `server_name`,
# and `root` directives, and any other customizations, in order to work.

index index.php;

include realip.conf;
include security.conf;

location ~* \.(?:ico|css|less|js|gif|jpe?g|png|svg|woff|woff2|ttf|ttc|otf|eot)$ {
    access_log off;
    #sendfile on;
    #tcp_nopush on;
    #tcp_nodelay on;
    expires 365d;
    add_header Pragma "public";
    add_header Access-Control-Allow-Origin "*";
    add_header Cache-Control "public";
    #add_header Cache-Control "public, max-age=315360000";
    #client_body_buffer_size 8K;
    #client_header_buffer_size 1k;
    #client_body_timeout 10;
    #client_header_timeout 10;
    #large_client_header_buffers 2 1k;
    ##keepalive_requests 60;
    ##keepalive_timeout 2 4;
    #send_timeout 3;
}

# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
location ~ \.php$ {
    include fastcgi_params;

    # Only use this for multiple domains with different store codes.
    set $MAGERUNCODE "en";
    if ($host = "phoenix.vagrant.test") {
        set $MAGERUNCODE "en";
    }
    if ($host = "develop.vagrant.test") {
        set $MAGERUNCODE "en";
    }
    fastcgi_param MAGE_RUN_CODE $MAGERUNCODE;

    # Handle SSL for varnish.
    set $site_ssl "off";
    set $xforwardedproto "http";
    set $xforwardedport "80";
    if ($http_x_forwarded_proto = "https") {
        set $site_ssl "on";
        set $xforwardedproto "https";
        set $xforwardedport "443";
    }
    # Important to have this, otherwise Magento redirect loop.
    fastcgi_param HTTPS $site_ssl;

    fastcgi_pass php-www;

    # See 75f034c which resolved gloves error.
    #proxy_redirect off;
    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $xforwardedproto;
    proxy_set_header X-Forwarded-Port $xforwardedport;
}

# Rewrite URLs for Magento
location /api {
    rewrite ^/api/rest /api.php?type=rest last;
    rewrite ^/api/v2_soap /api.php?type=v2_soap last;
    rewrite ^/api/soap /api.php?type=soap last;
}

location / {
    try_files $uri $uri/ /index.php?$args; # make index.php handle requests for /
}
