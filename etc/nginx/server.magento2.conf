##
# Server block contents for a Magento2 server.
#
# Note that this content is assumed to be routed to via an upstream that a
# *:443 listening server block sent via proxy_pass.
#
# The actual server block defintion needs to include `listen`, `server_name`,
# and `root` directives, and any other customizations, in order to work.

index index.php;
error_page 404 403 = /errors/404.php;

include realip.conf;
include security.conf;

# PHP entry point for setup application
location ~* ^/setup($|/) {
    root $MAGE_ROOT;

    location ~ ^/setup/index.php {
        fastcgi_pass php-www;
        if ($host ~* ".*php56.*") {
            fastcgi_pass php56-www;
        }
        fastcgi_param PHP_FLAG "session.auto_start=off \n suhosin.session.cryptua=off";
        fastcgi_param PHP_VALUE "memory_limit=768M \n max_execution_time=600";
        include fastcgi_params;
    }

    location ~ ^/setup/(?!pub/). {
        deny all;
    }
}

# PHP entry point for update application
location ~* ^/update($|/) {
    root $MAGE_ROOT;

    location ~ ^/update/index.php {
        fastcgi_split_path_info ^(/update/index.php)(/.+)$;
        fastcgi_pass php-www;
        if ($host ~* ".*php56.*") {
            fastcgi_pass php56-www;
        }
        fastcgi_param PATH_INFO $fastcgi_path_info;
        include fastcgi_params;
    }

    # Deny everything but index.php
    location ~ ^/update/(?!pub/). {
        deny all;
    }
}

location / {
    try_files $uri $uri/ /index.php$is_args$args;
}

location /pub/ {
    location ~ ^/pub/media/(downloadable|customer|import|theme_customization/.*\.xml) {
        deny all;
    }

    alias $MAGE_ROOT/pub/;
}

location ~* \.(?:ico|css|less|js|gif|jpe?g|png|svg|woff|woff2|ttf|ttc|otf|eot|swf)$ {
    access_log off;
    #sendfile on;
    #tcp_nopush on;
    #tcp_nodelay on;
    expires 365d;
    add_header Pragma "public";
    add_header Access-Control-Allow-Origin "*";
    add_header Cache-Control "public";
    #add_header Cache-Control "public, max-age=315360000";
    #client_body_buffer_size 8K;
    #client_header_buffer_size 1k;
    #client_body_timeout 10;
    #client_header_timeout 10;
    #large_client_header_buffers 2 1k;
    ##keepalive_requests 60;
    ##keepalive_timeout 2 4;
    #send_timeout 3;
}

location /static/ {
    # Uncomment the following line in production mode
    # expires max;

    # Remove signature of the static files that is used to overcome the browser cache
    location ~ ^/static/version {
        rewrite ^/static/(version\d*/)?(.*)$ /static/$2 last;
    }

    location ~* \.(?:ico|css|less|js|gif|jpe?g|png|svg|woff|woff2|ttf|ttc|otf|eot|swf)$ {
        if (!-f $request_filename) {
            rewrite ^/static/?(.*)$ /static.php?resource=$1 last;
        }
    }

    location ~* \.(zip|gz|gzip|bz2|csv|xml)$ {
        add_header Cache-Control "no-store";
        expires off;

        if (!-f $request_filename) {
           rewrite ^/static/?(.*)$ /static.php?resource=$1 last;
        }
    }

    if (!-f $request_filename) {
        rewrite ^/static/?(.*)$ /static.php?resource=$1 last;
    }
}

location /media/ {
    try_files $uri $uri/ /get.php$is_args$args;

    location ~ ^/media/theme_customization/.*\.xml {
        deny all;
    }

    location ~* \.(?:ico|css|less|js|gif|jpe?g|png|svg|woff|woff2|ttf|ttc|otf|eot|swf)$ {
        try_files $uri $uri/ /get.php$is_args$args;
    }

    location ~* \.(zip|gz|gzip|bz2|csv|xml)$ {
        add_header Cache-Control "no-store";
        expires off;
        try_files $uri $uri/ /get.php$is_args$args;
    }
}

# PHP entry point for main application
location ~ (index|get|static|report|404|503|phpinfo)\.php$ {
    include fastcgi_params;

    # Only use this for multiple domains with different store codes.
    set $MAGERUNCODE "en";
    if ($host = "phoenix.vagrant.test") {
        set $MAGERUNCODE "en";
    }
    if ($host = "develop.vagrant.test") {
        set $MAGERUNCODE "en";
    }
    if ($host ~* ".*php56.*") {
        set $MAGERUNCODE "en";
    }
    fastcgi_param MAGE_RUN_CODE $MAGERUNCODE;

    # Handle SSL for varnish.
    set $site_ssl "off";
    set $xforwardedproto "http";
    set $xforwardedport "80";
    if ($http_x_forwarded_proto = "https") {
        set $site_ssl "on";
        set $xforwardedproto "https";
        set $xforwardedport "443";
    }
    # Important to have this, otherwise Magento redirect loop.
    fastcgi_param HTTPS $site_ssl;

    try_files $uri =404;
    fastcgi_pass php-www;
    if ($host ~* ".*php56.*") {
        fastcgi_pass php56-www;
    }

    fastcgi_param  PHP_FLAG  "session.auto_start=off \n suhosin.session.cryptua=off";
    fastcgi_param  PHP_VALUE "memory_limit=768M \n max_execution_time=18000";

    # See 75f034c which resolved gloves error.
    #proxy_redirect off;
    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $xforwardedproto;
    proxy_set_header X-Forwarded-Port $xforwardedport;
}
